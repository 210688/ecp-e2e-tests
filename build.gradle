plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1' //2.9.6
}

group 'ru.mos.smart'
version '1.0'

repositories {
    maven {
        url "https://repo-mirror.mos.ru/repository/maven-central/"
    }
    mavenCentral()
}

def allureVersion = '2.16.0',
    selenideVersion = '6.17.1', //5.25.0
    junitVersion = '5.9.2'

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.1'
    testImplementation(
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            'org.aspectj:aspectjweaver:1.9.19',
            'io.rest-assured:rest-assured:5.3.0',
            'io.rest-assured:json-schema-validator:5.3.0',
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.24.2',
            'ch.qos.logback:logback-classic:1.4.7',
            'org.projectlombok:lombok:1.18.26',
            'org.slf4j:slf4j-api:2.0.5',
            'org.jsoup:jsoup:1.15.4',
            'com.fasterxml.jackson.core:jackson-databind:2.15.1',
            'com.github.javafaker:javafaker:1.0.2',
            'ru.yandex.qatools.ashot:ashot:1.5.4',
            'io.github.artsok:rerunner-jupiter:2.1.6')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    if (System.getProperty("environment") == null) {
        System.setProperty("environment", "predprod")
    }
    systemProperties(System.getProperties())
    useJUnitPlatform()

    /*if (System.getProperty("threads") != null) {

        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads")
        ]
    }*/

    testLogging {
        events "started", "skipped", "passed", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
    }
}

task preprod(type: Test) { //Запускает все модули на предпроде
    useJUnitPlatform {
        includeTags 'predprod'
    }
}

task prod(type: Test) {
    useJUnitPlatform {
        includeTags 'prod'
    }
}

task stage(type: Test) {
    useJUnitPlatform {
        includeTags 'stage'
    }
}

task regressing(type: Test) {
    useJUnitPlatform {
        includeTags 'regressions'
    }
}

task regres(type: Test) {
    useJUnitPlatform {
        includeTags 'regres'
    }
}

task drone(type: Test) {
    useJUnitPlatform {
        includeTags 'drone'
    }
}

task createCartDrone(type: Test) {
    useJUnitPlatform {
        includeTags 'createCartDrone'
    }
}

task rinrif(type: Test) {
    useJUnitPlatform {
        includeTags 'rinrif'
    }
}
task rinrifCards(type: Test) {
    useJUnitPlatform {
        includeTags 'rinrifCards'
    }
}
