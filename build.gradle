plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

group 'ru.mos.smart'
version '1.0'


repositories {
    jcenter()
    mavenCentral()
}

def allureVersion = "2.14.0",
    selenideVersion = "5.22.3",
    junitVersion = "5.7.2"

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:4.3.1",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.19.0",
            "org.jsoup:jsoup:1.13.1",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "ch.qos.logback:logback-classic:1.2.3",
            "org.projectlombok:lombok:1.18.20",
            "org.slf4j:slf4j-api:1.7.25",
            "com.github.javafaker:javafaker:1.0.2")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    if (System.getProperty("environment") == null)
        System.setProperty("environment", "predprod")
    if (System.getProperty("tag") == null)
        System.setProperty("tag", "(ugd1 | regressions)")

    systemProperties(System.getProperties())
    useJUnitPlatform()
    maxParallelForks = 1
}


tasks.withType(Test) {
    testLogging {
        events "started", "skipped", "passed", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
    }
}

test {
    useJUnitPlatform()
}

task preprod(type: Test) { //Запускает все модули на предпроде (исключительно предпрод)
    useJUnitPlatform {
        includeTags 'predprod'
    }
}

task prodd(type: Test) { //запускает все модули на проде (исключительно прод)
    useJUnitPlatform {
        includeTags 'prod'
    }
}

task regressing(type: Test) { //Запуск регрессионных тестов на 3-ёх платформах
    useJUnitPlatform {
        includeTags 'regressions'
    }
}

task tests(type: Test) { //Запуск тестов из системной переменной
    useJUnitPlatform {
        includeTags System.getProperty("environment") + ' & ' + System.getProperty("tag")
    }
}
