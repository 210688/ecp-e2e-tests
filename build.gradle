plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

group 'ru.mos.smart'
version '1.0'

repositories {
    mavenCentral()
}

def allureVersion = '2.16.0',
    selenideVersion = '5.25.0',
    junitVersion = '5.8.1'

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-junit5:$allureVersion",
            'org.aspectj:aspectjweaver:1.9.7',
            'io.rest-assured:rest-assured:4.4.0',
            'io.rest-assured:json-schema-validator:4.4.0',
            'org.aeonbits.owner:owner:1.0.12',
            'org.assertj:assertj-core:3.21.0',
            'ch.qos.logback:logback-classic:1.2.7',
            'org.projectlombok:lombok:1.18.22',
            'org.slf4j:slf4j-api:1.7.32',
            'org.jsoup:jsoup:1.14.2',
            'com.fasterxml.jackson.core:jackson-databind:2.11.3',
            'com.github.javafaker:javafaker:1.0.2')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    if (System.getProperty("environment") == null)
        System.setProperty("environment", "predprod")
    if (System.getProperty("tag") == null)
        System.setProperty("tag", "(ssr | lrp)")

    systemProperties(System.getProperties())
    useJUnitPlatform()
    maxParallelForks = 1
}

task launchTasks(type: Test) { //Запуск тестов из системной переменной tests
    useJUnitPlatform {
        includeTags System.getProperty("environment") + ' & ' + System.getProperty("tag")
    }
}

tasks.withType(Test) {
    testLogging {
        events "started", "skipped", "passed", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
    }
}

test {
    useJUnitPlatform()
}


task preprod(type: Test) { //Запускает все модули на предпроде
    useJUnitPlatform {
        includeTags 'predprod'
    }
}

task prodd(type: Test) { //запускает все модули на проде
    useJUnitPlatform {
        includeTags 'prod'
    }
}

task stage(type: Test) { //запускает все модули на стейдже
    useJUnitPlatform {
        includeTags 'stage'
    }
}

task regressing(type: Test) { //Запуск регрессионных тестов на 3-ёх платформах
    useJUnitPlatform {
        includeTags 'regressions'
    }
}